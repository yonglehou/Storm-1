<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Configuration" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Configuration" #>
<#@ import namespace="System.Linq" #>
<#@ output extension=".cs" #>
<#

// Look for the NuGet packages folder and resolve the absolute path
var path = Host.ResolvePath(@"..\packages");
path = System.IO.Path.GetFullPath(path);

// Find the Storm package
var dirInfo = new System.IO.DirectoryInfo(path);
var stormDll = dirInfo.GetFiles("Flyingpie.Storm.dll", System.IO.SearchOption.AllDirectories).FirstOrDefault();

if (stormDll == null)
{
	Write("// Error: could not find the Storm dll, are you sure the Storm package is correctly installed?");
}
else
{
	var assembly = System.Reflection.Assembly.LoadFile(stormDll.FullName);
	var generatorType = assembly.GetTypes().FirstOrDefault(t => t.FullName == "Flyingpie.Storm.Generator");

	if (generatorType == null)
	{
		Write("// Error: could not find a generator, are you sure the Storm package is correctly installed?");
	}
	else
	{
		var cString = "<connection string>";
		var generator = generatorType.InvokeMember("FromConnectionString", System.Reflection.BindingFlags.InvokeMethod, System.Type.DefaultBinder, "", new object[] { cString });
		var result = generatorType.InvokeMember("Generate", System.Reflection.BindingFlags.InvokeMethod, System.Type.DefaultBinder, generator, new object[] { });

		Write(result.ToString());
	}
}

#>